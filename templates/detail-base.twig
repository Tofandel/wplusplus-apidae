{% import "macros.twig" as apidae %}

{% block scripts %}
	{{ enqueue_script('jquery-ui-tabs') }}
	{{ enqueue_style('jquery-ui-css', '//ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/base/jquery-ui.css', false,"1.9.0") }}
	<script>
		jQuery(document).ready(function ($) {
			$(".tabs").tabs();
			$(".tabs li");
		});
	</script>
{% endblock %}

{% if false %}
	{# we wrap the blocks in if false so they are declared but not displayed #}
	{% block description %}
		{% set desc = o.presentation.descriptifDetaille.libelleFr|default(o.presentation.descriptifCourt.libelleFr) %}
		<p class="description">{{ desc|nl2br }}</p>
	{% endblock description %}

	{% block localisation %}
		<h3>Addresse</h3>
		<p>{{ o.localisation.adresse.adresse1 }}</p>
		<p>{{ o.localisation.adresse.codePostal }}, {{ o.localisation.adresse.commune.nom }}</p>
		{% block map %}
			{% if useMaps %}
				<h3>Carte</h3>
				[apidae_map height="350px" zoom="8" marker_animation="none" color_scheme="preset" preset="retro"]
			{% endif %}
		{% endblock %}
	{% endblock localisation %}

	{% block tarifs_reservation %}
		{% if o.ouverture.periodeEnClair.libelleFr is not empty %}
			<h3>Ouverture</h3>
			{{ o.ouverture.periodeEnClair.libelleFr|nl2br }}
		{% endif %}
		{% if o.descriptionTarif.tarifsEnClair.libelleFr is not empty %}
			<h3>Tarifs</h3>
			{{ o.descriptionTarif.tarifsEnClair.libelleFr|nl2br }}
		{% endif %}
		{% if o.descriptionTarif.modesPaiement is not empty %}
			<h3>Modes de paiement acceptés</h3>
			<ul class="modepaiement">
				{% for pay in o.descriptionTarif.modesPaiement|orderBy('ordre') %}
					<li>{{ pay.libelleFr }}</li>
				{% endfor %}
			</ul>
		{% endif %}
		{% if o.reservation.organismes is not empty %}
			{% set not_displayed = true %}
			{% for organisme in o.reservation.organismes %}
				{% set organisme = organisme.moyensCommunication|orderBy('type.ordre')|groupBy('type.id') %}
				{% if not_displayed and organisme is not empty %}
					<h3>Reservation</h3>
					{% set not_displayed = false %}
				{% endif %}
				{% for com in organisme %}
					{% if com.type.id is iterable %}
						<div class="communication communication-mode-{{ com.type.id.0 }}">
							<h5>{{ com.type.libelleFr.0 }}</h5>
							{% for key, val in com.type.id %}
								<span>{{ apidae.com_link(com.type.id.0, attribute(com.coordonnees.fr, key)) }}</span>{% if not loop.last %},{% endif %}
							{% endfor %}
						</div>
					{% else %}
						<div class="communication communication-mode-{{ com.type.id|raw|e('html_attr') }}">
							<h5>{{ com.type.libelleFr }}</h5>
							<span>{{ apidae.com_link(com.type.id, com.coordonnees.fr) }}</span>
						</div>
					{% endif %}
				{% endfor %}
			{% endfor %}
		{% endif %}
	{% endblock tarifs_reservation %}

	{% block moyencommunication %}
		<h3>Informations de Contact</h3>
		{% set coms = o.informations.moyensCommunication|orderBy('type.ordre')|groupBy('type.id') %}
		{% for com in coms %}
			{% if com.type.id is iterable %}
				<div class="communication communication-mode-{{ com.type.id.0 }}">
					<h5>{{ com.type.libelleFr.0 }}</h5>
					{% for key, val in com.type.id %}
						<span>{{ apidae.com_link(com.type.id.0, attribute(com.coordonnees.fr, key)) }}</span>{% if not loop.last %},{% endif %}
					{% endfor %}
				</div>
			{% else %}
				<div class="communication communication-mode-{{ com.type.id|raw|e('html_attr') }}">
					<h5>{{ com.type.libelleFr }}</h5>
					<span>{{ apidae.com_link(com.type.id, com.coordonnees.fr) }}</span>
				</div>
			{% endif %}
		{% endfor %}
	{% endblock moyencommunication %}

	{% block prestations %}
		{% set prestations = {} %}
		{% for key, label in presta_types %}
			{% if attribute(o.prestations, key) is not empty %}
				{% set prestations = {(key): attribute(o.prestations, key)}|merge(prestations) %}
			{% endif %}
		{% endfor %}
		{% if prestations is not empty %}
			<h3>Prestations</h3>
			<ul>
				{% for key, label in presta_types %}
					{% if attribute(o.prestations, key) is iterable and attribute(o.prestations, key) is not empty %}
						<li><h5>{{ label }}</h5>
							<ul>
								{% for presta in attribute(o.prestations, key)|orderBy('ordre')|groupBy('familleCritere.id') %}
									{% if presta.id is iterable %}
										<li>{% if presta.familleCritere.libelleFr.0 is not empty %}
												<strong>{{ presta.familleCritere.libelleFr.0 }}
												:</strong>{% endif %}
											{% for key, val in presta.id %}
												{{ attribute(presta.libelleFr, key) }}{% if not loop.last %},{% endif %}
											{% endfor %}
										</li>
									{% else %}
										<li>
											{% if presta.familleCritere.libelleFr is not empty %}
												<strong>{{ presta.familleCritere.libelleFr }} :</strong>
											{% endif %}
											{{ presta.libelleFr }}
										</li>
									{% endif %}
								{% endfor %}
							</ul>
						</li>
					{% endif %}
				{% endfor %}
			</ul>
		{% endif %}
	{% endblock prestations %}
{% endif %}

{% set tabs = tabs|default({
	description: "Description",
	localisation: "Localisation",
	tarifs_reservation: "Tarifs et Reservation",
	moyencommunication: "Informations de Contact",
	prestations: "Prestations"
}) %}
{% set presta_types = presta_types|default({
	equipements: "Equipements",
	services: "Services",
	conforts: "Conforts",
	languesparlees: "Langues Parlées"}) %}

<div class="apidae-detail" id="apidae-{{ o.id }}">
	{% block marker %}
		{% autoescape 'js' %}
			{% if useMaps %}
				<script>
					if (typeof markerNodes === 'undefined')
						var markerNodes = [];
					markerNodes.push({
						'id': "apidae-{{ o.id }}",
						'name': "{{ o.nom.libelleFr }}",
						'addressLine1': "{{ o.localisation.adresse.codePostal }}, {{ o.localisation.adresse.commune.nom }}",
						'addressLine2': "{{ o.localisation.adresse.adresse1 }}",
						'lng': "{{ o.localisation.geolocalisation.geoJson.coordinates[0] }}",
						'lat': "{{ o.localisation.geolocalisation.geoJson.coordinates[1] }}",
						'link': "https://www.google.com/maps/dir//{{ o.localisation.adresse.adresse1 }}, {{ o.localisation.adresse.codePostal }}, {{ o.localisation.adresse.commune.nom }}/@{{ o.localisation.geolocalisation.geoJson.coordinates[1] }},{{ o.localisation.geolocalisation.geoJson.coordinates[0] }}z/"
						'icon': "{{ map_icon }}"
					});
				</script>
			{% endif %}
		{% endautoescape %}
	{% endblock marker %}
	{% block layout %}
		{% autoescape 'html' %}
			{% block return %}
				{% if referer is not empty %}
					<a class="retlink" href="{{ referer }}">{{ __('< Return') }}</a>
				{% endif %}
			{% endblock return %}
			{% block title %}
				<h2 class="title">{{ o.nom.libelleFr }}</h2>
			{% endblock title %}
			{% block images %}
				<div class="image-container">
					{{ apidae.diaporama(o, 'medium') }}
				</div>
			{% endblock images %}
			{% block tabs %}
				<div class="tabs">
					{% set sections = {} %}
					<ul>
						{% for key, label in tabs %}
							{% set block = block(key)|trim %}
							{% if block is not empty %}
								{% set sections = sections|merge({ (key): block}) %}
								<li><a href="#{{ key }}">{{ label }}</a></li>
							{% endif %}
						{% endfor %}
					</ul>
					{% for key, block in sections %}
						<section id="{{ key }}">
							{{ block|raw }}
						</section>
					{% endfor %}
				</div>
			{% endblock tabs %}
		{% endautoescape %}
	{% endblock layout %}
</div>